#include "ClienteController.h"

using namespace System;
using namespace System::Data::SqlClient;
using namespace LPOOCarwashController;
using namespace LPOOCarwashModel;

clienteController::clienteController() {
    this->objConexion = gcnew SqlConnection();
}

int clienteController::buscarUsuarioEnCliente(String^ nombre, String^ apellido, String^ identificacion) {
    int clase = 0;
    abrirConexion();
    SqlCommand^ objSentencia = gcnew SqlCommand();
    objSentencia->Connection = this->objConexion;
    objSentencia->CommandText = "select * from _Cliente where nombre like '%" + nombre + "%' and apellido like '%" + apellido + "%' and identificacion = '" + identificacion + "';";
    SqlDataReader^ objData = objSentencia->ExecuteReader();
    if (objData->Read()) {
        clase = 1;
    }
    cerrarConexion();
    return clase;
}

List<Cliente^>^ clienteController::buscarCliente(String^ nombre, String^ apellido, String^ identificacion) {
    List<Cliente^>^ listaClienteEncontrados = gcnew List<Cliente^>();
    abrirConexion();
    SqlCommand^ objSentencia = gcnew SqlCommand();
    objSentencia->Connection = this->objConexion;
    objSentencia->CommandText = "select * from _Cliente where identificacion like '%" + identificacion + "%' and nombre like '%" + nombre + "%' and apellido like '%" + apellido + "%';";
    SqlDataReader^ objData = objSentencia->ExecuteReader();
    while (objData->Read()) {
        String^ nombreCliente = safe_cast<String^>(objData[1]);
        String^ apellidoCliente = safe_cast<String^>(objData[2]);
        int identificacionCliente = safe_cast<int>(objData[3]);
        int edad = safe_cast<int>(objData[4]);
        int celular = safe_cast<int>(objData[5]);
        String^ sexo = safe_cast<String^>(objData[6]);
        Cliente^ objCliente = gcnew Cliente(nombreCliente, apellidoCliente, identificacionCliente, edad, celular, sexo);
        listaClienteEncontrados->Add(objCliente);
    }
    cerrarConexion();
    return listaClienteEncontrados;
}

List<Cliente^>^ clienteController::buscarAll() {
    List<Cliente^>^ listaClienteEncontrados = gcnew List<Cliente^>();
    abrirConexion();
    SqlCommand^ objSentencia = gcnew SqlCommand();
    objSentencia->Connection = this->objConexion;
    objSentencia->CommandText = "select * from _Cliente";
    SqlDataReader^ objData = objSentencia->ExecuteReader();
    while (objData->Read()) {
        String^ nombreCliente = safe_cast<String^>(objData[1]);
        String^ apellidoCliente = safe_cast<String^>(objData[2]);
        int identificacionCliente = safe_cast<int>(objData[3]);
        int edad = safe_cast<int>(objData[4]);
        int celular = safe_cast<int>(objData[5]);
        String^ sexo = safe_cast<String^>(objData[6]);
        Cliente^ objCliente = gcnew Cliente(nombreCliente, apellidoCliente, identificacionCliente, edad, celular, sexo);
        listaClienteEncontrados->Add(objCliente);
    }
    cerrarConexion();
    return listaClienteEncontrados;
}
void clienteController::eliminarCliente(int identificacion) {
    abrirConexion();
    SqlCommand^ objSentencia = gcnew SqlCommand();
    objSentencia->Connection = this->objConexion;
    objSentencia->CommandText = "DELETE FROM _Cliente WHERE identificacion=" + identificacion + ";";
    objSentencia->ExecuteReader();
    cerrarConexion();
}

void clienteController::agregarCliente(String^ nombre, String^ apellido, int identificacion, int edad, int celular, String^ sexo) {
    abrirConexion();
    SqlCommand^ objSentencia = gcnew SqlCommand();
    objSentencia->Connection = this->objConexion;
    objSentencia->CommandText = "INSERT INTO _Cliente(nombre, apellido, identificacion, edad, celular, sexo) VALUES('" + nombre + "','" + apellido + "'," + identificacion + "," + edad + "," + celular + ",'" + sexo + "');";
    objSentencia->ExecuteReader();
    cerrarConexion();
}

Cliente^ clienteController::buscarClientexIdentificacion(int identificacion) {
    Cliente^ ClienteEncontrado = nullptr;
    abrirConexion();
    SqlCommand^ objSentencia = gcnew SqlCommand();
    objSentencia->Connection = this->objConexion;
    objSentencia->CommandText = "select * from _Cliente where identificacion='" + identificacion + "';";
    SqlDataReader^ objData = objSentencia->ExecuteReader();
    while (objData->Read()) {
        String^ nombreCliente = safe_cast<String^>(objData[1]);
        String^ apellidoCliente = safe_cast<String^>(objData[2]);
        int identificacionCliente = safe_cast<int>(objData[3]);
        int edad = safe_cast<int>(objData[4]);
        int celular = safe_cast<int>(objData[5]);
        String^ sexo = safe_cast<String^>(objData[6]);
        ClienteEncontrado = gcnew Cliente(nombreCliente, apellidoCliente, identificacionCliente, edad, celular, sexo);
    }
    cerrarConexion();
    return ClienteEncontrado;
}

void clienteController::abrirConexion() {
    this->objConexion->ConnectionString = "Server=200.16.7.140;DataBase=a20191304;User Id=a20191304;Password=3GK4jHmL";
    this->objConexion->Open();
}

void clienteController::cerrarConexion() {
    this->objConexion->Close();
}
